From 71f6aa1cb6a3f7df09dd4134c97cf1b62f508026 Mon Sep 17 00:00:00 2001
From: yuiiio <atbjyk@protonmail.com>
Date: Fri, 2 Oct 2020 20:12:08 +0900
Subject: [PATCH 1/3] atbjyk's HACK

---
 dlls/winex11.drv/settings.c | 11 +++++++++++
 dlls/winex11.drv/window.c   | 25 +++++++++++++++++++++++++
 dlls/winex11.drv/x11drv.h   |  3 +++
 dlls/winex11.drv/xrandr.c   | 18 ++++++++++++++++++
 4 files changed, 57 insertions(+)

diff --git a/dlls/winex11.drv/settings.c b/dlls/winex11.drv/settings.c
index 0fa5bcf6294..b3efa96e08a 100644
--- a/dlls/winex11.drv/settings.c
+++ b/dlls/winex11.drv/settings.c
@@ -78,6 +78,17 @@ void X11DRV_Settings_SetHandler(const struct x11drv_settings_handler *new_handle
     }
 }
 
+BOOL restore_display_mode(void)
+{
+    static int is_int = -1;
+    if(is_int < 0)
+    {
+        const char *e = getenv("WINE_RESTORE_DISPLAY_MODE");
+        is_int = e && strcmp(e, "0");
+    }
+    return is_int;
+}
+
 /***********************************************************************
  * Default handlers if resolution switching is not enabled
  *
diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 2dec086a9d4..44ebf4f700e 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -1159,6 +1159,31 @@ static void unmap_window( HWND hwnd )
 
     if (data->mapped)
     {
+        if(restore_display_mode()){
+            // Change display mode setting
+            TRACE( "atbjyk's HACK: Change display mode\n" );
+
+            if((data->net_wm_state & (1 << NET_WM_STATE_FULLSCREEN)) == (1 << NET_WM_STATE_FULLSCREEN)){
+                TRACE( "this window is fullscreen\n" );
+
+                LPCWSTR devname = NULL;
+                int default_width, default_height = 0;
+                get_default_mode(default_width, default_height);
+                DEVMODEW devmode;
+
+                memset(&devmode, 0, sizeof(devmode));
+                devmode.dmSize = sizeof(devmode);
+                devmode.dmFields = DM_PELSWIDTH | DM_PELSHEIGHT;
+                devmode.dmPelsWidth = default_width;
+                devmode.dmPelsHeight = default_height;
+
+                ChangeDisplaySettingsExW(devname, &devmode, NULL,
+                        CDS_FULLSCREEN, NULL);
+            }else{
+                TRACE( "this window is not fullscreen\n" );
+            }
+        }
+
         TRACE( "win %p/%lx\n", data->hwnd, data->whole_window );
 
         if (data->embedded) set_xembed_flags( data, 0 );
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 2e80f6fd0e2..560cf686bee 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -610,6 +610,9 @@ extern void update_systray_balloon_position(void) DECLSPEC_HIDDEN;
 extern HWND create_foreign_window( Display *display, Window window ) DECLSPEC_HIDDEN;
 extern BOOL update_clipboard( HWND hwnd ) DECLSPEC_HIDDEN;
 
+extern BOOL restore_display_mode(void) DECLSPEC_HIDDEN;
+extern void get_default_mode(int width, int height) DECLSPEC_HIDDEN;
+
 static inline void mirror_rect( const RECT *window_rect, RECT *rect )
 {
     int width = window_rect->right - window_rect->left;
diff --git a/dlls/winex11.drv/xrandr.c b/dlls/winex11.drv/xrandr.c
index 78ad98acd49..6a9721e24e7 100644
--- a/dlls/winex11.drv/xrandr.c
+++ b/dlls/winex11.drv/xrandr.c
@@ -1331,6 +1331,9 @@ static void xrandr14_free_modes( DEVMODEW *modes )
     heap_free( modes );
 }
 
+int default_width, default_height = 0;
+BOOL init_first = 0;
+
 static BOOL xrandr14_get_current_mode( ULONG_PTR id, DEVMODEW *mode )
 {
     XRRScreenResources *screen_resources;
@@ -1400,6 +1403,13 @@ static BOOL xrandr14_get_current_mode( ULONG_PTR id, DEVMODEW *mode )
     mode->u1.s2.dmPosition.x = crtc_info->x - primary.left;
     mode->u1.s2.dmPosition.y = crtc_info->y - primary.top;
     ret = TRUE;
+    if(init_first == 0){
+        TRACE( "atbjyk: set default mode. w: %i, h: %i\n", mode->dmPelsWidth, mode->dmPelsHeight);
+        default_width = mode->dmPelsWidth;
+        default_height = mode->dmPelsHeight;
+        init_first = 1;
+    }
+
 done:
     if (crtc_info)
         pXRRFreeCrtcInfo( crtc_info );
@@ -1410,6 +1420,14 @@ done:
     return ret;
 }
 
+void get_default_mode(int width, int height)
+{
+    width = default_width;
+    height = default_height;
+    TRACE( "atbjyk: get default mode. w: %i, h: %i\n", default_width, default_height);
+
+}
+
 static LONG xrandr14_set_current_mode( ULONG_PTR id, DEVMODEW *mode )
 {
     unsigned int screen_width, screen_height;
-- 
2.28.0

